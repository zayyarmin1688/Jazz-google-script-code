function updateDropdowns() {
  var form = FormApp.openById("1reuAZF3XJ7csb_3ZfXPMnQ3myYg55zNp96rBSpGDsUk"); // Google Form ID
  var sheet = SpreadsheetApp.openById("16BdfnBN10f0_c7jAslP9Jgrd1S--rJd3n9liuVWGiEk"); // Google Sheets ID

  var confirmedSheet = sheet.getSheetByName("Confirmed Jazz Venues");
  var nonConfirmedSheet = sheet.getSheetByName("Non confirmed Jazz Venue");

  function getSortedUniqueVenues(sheet) {
    var values = sheet.getRange("B2:J").getValues(); // Extract Name (B) & Neighborhood (J)
    
    var venueSet = new Set(); // Use a Set to remove duplicates
    var venues = [];

    values.forEach(row => {
      var name = row[0]?.trim(); // Venue Name (Column B)
      var neighborhood = row[8]?.trim() || "N/A"; // Neighborhood (Column J), default to "N/A" if empty
      var formattedName = `${neighborhood} - ${name}`;

      if (!venueSet.has(formattedName)) {
        venueSet.add(formattedName);
        venues.push({ fullName: formattedName, neighborhood: neighborhood });
      }
    });

    // Sort alphabetically, pushing "N/A" neighborhoods to the bottom
    venues.sort((a, b) => {
      if (a.neighborhood === "N/A" && b.neighborhood !== "N/A") return 1;
      if (b.neighborhood === "N/A" && a.neighborhood !== "N/A") return -1;
      return a.fullName.localeCompare(b.fullName);
    });

    return venues.map(v => v.fullName);
  }

  var confirmedNames = getSortedUniqueVenues(confirmedSheet);
  var nonConfirmedNames = getSortedUniqueVenues(nonConfirmedSheet);

  var formItems = form.getItems();

  // Update Confirmed Jazz Venues dropdown
  formItems.forEach(item => {
    if (item.getTitle() === "Names of Jazz Venues (confirmed locations)") {
      var listItem = item.asListItem();
      listItem.setChoices(confirmedNames.map(name => listItem.createChoice(name)));
    }
  });

  // Update Non-Confirmed Jazz Venues dropdown
  formItems.forEach(item => {
    if (item.getTitle() === "Names of Jazz Venues (not confirmed locations)") {
      var listItem = item.asListItem();
      listItem.setChoices(nonConfirmedNames.map(name => listItem.createChoice(name)));
    }
  });

  Logger.log("Dropdowns updated successfully.");
}

function onFormSubmit(e) {
  var sheet = SpreadsheetApp.openById("16BdfnBN10f0_c7jAslP9Jgrd1S--rJd3n9liuVWGiEk"); // Google Sheets ID
  var responseSheet = sheet.getSheetByName("Form Responses");

  if (!responseSheet) {
    responseSheet = sheet.insertSheet("Form Responses");
    responseSheet.appendRow([
      "Timestamp", "User Choice", "Selected Venue", "Address", "Starting Year",
      "Ending Year", "Summary", "City", "Neighborhood", "Closest Station",
      "Website URL", "Social Media", "Active Status"
    ]);
  }

  var formResponse = e.response;
  var itemResponses = formResponse.getItemResponses();
  
  var timestamp = new Date(formResponse.getTimestamp()).toLocaleString();
  var userChoice = itemResponses[0].getResponse(); // First question response
  var selectedVenue = ""; // Will store the venue name based on user selection
  var answers = []; // Array to hold the rest of the responses

  itemResponses.forEach((item, index) => {
    var title = item.getItem().getTitle();
    var response = item.getResponse();

    if (title.includes("confirmed locations") || title.includes("not confirmed locations")) {
      selectedVenue = response;
    } else {
      answers.push(response);
    }
  });

  responseSheet.appendRow([timestamp, userChoice, selectedVenue, ...answers]);

  Logger.log("Form responses recorded successfully.");
}
